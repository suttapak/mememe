package repository

import (

	"gorm.io/gorm"
)

type (
	{{ .UpperName }} interface {
		CommonDB
	}

	{{ .LowerName }} struct {
		db *gorm.DB
	}
)


// BeginTx implements {{ .UpperName }}.
func (i *{{ .LowerName }}) BeginTx() *gorm.DB {
	return i.db.Begin()
}

// CommitTx implements {{ .UpperName }}.
func (i *{{ .LowerName }}) CommitTx(tx *gorm.DB) {
	if tx != nil {
		tx.Commit()
	}
}

// RollbackTx implements {{ .UpperName }}.
func (i *{{ .LowerName }}) RollbackTx(tx *gorm.DB) {
	if tx != nil {
		tx.Rollback()
	}
}

func new{{ .UpperName }}(db *gorm.DB) {{ .UpperName }} {
	return &{{ .LowerName }}{
		db: db,
	}
}
